services:
  bl01t-ea-test-01:
    image: "ghcr.io/epics-containers/ioc-adsimdetector-runtime:2024.6.1"
    volumes:
      - ./services/bl01t-ea-test-01/config:/epics/ioc/config
      - opi:/epics/opi
    networks:
      - channel-access
    tty: true
    stdin_open: true
  bl01t-di-cam-01:
    image: "ghcr.io/epics-containers/ioc-adsimdetector-runtime:2024.6.1"
    networks:
      - channel-access
    volumes:
      - ./services/bl01t-di-cam-01/config:/epics/ioc/config
      - opi:/epics/opi
    tty: true
    stdin_open: true
  epics-opis:
    image: "nginx:1.25.4"
    networks:
      - channel-access
    volumes:
      - opi:/opi
  phoebus:
    image: "ghcr.io/epics-containers/ec-phoebus:latest"
    environment:
      DISPLAY: $DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/root/.Xauthority
      - opi:/opi
    # for X11 to work we need to run as the same UID as the host
    # IMPORTANT: these environment variables must be exported before compose up
    user: ${UID}:${GID}
    network_mode: "host"
volumes:
  opi:
networks:
  # for example IOCs, we use a custom network for all services so that CA
  # is isolated to the current machine
  channel-access: